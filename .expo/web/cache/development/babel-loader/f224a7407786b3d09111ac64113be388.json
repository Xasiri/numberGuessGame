{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/asiri/Documents/Native/react/Jan/New_p/screens/StartGaneScreen.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Card from \"../components/Card\";\nimport Input from \"../components/Input\";\nimport Colors from \"../constants/colors\";\n\nvar StartGaneScreen = function StartGaneScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1];\n\n  var _useState3 = useState('false'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmed = _useState4[0],\n      setConfirmed = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedNumber = _useState6[0],\n      setSelectedNumber = _useState6[1];\n\n  var numberInputHandler = function numberInputHandler(inputText) {\n    setEnteredValue(inputText.replace(/[^0-9]/g, ''));\n  };\n\n  var resetInputHandler = function resetInputHandler() {\n    setEnteredValue('');\n    setConfirmed(fasle);\n  };\n\n  var confirmInputHandler = function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredValue);\n\n    if (chosenNumber === NaN || chosenNumber <= 0 || chosenNumber > 99) {\n      return;\n    }\n\n    setConfirmed(true);\n    setSelectedNumber(parseInt(chosenNumber));\n    setEnteredValue('');\n  };\n\n  var confirmedOutput;\n\n  if (confirmed) {\n    confirmedOutput = React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 23\n      }\n    }, \" Chosen Number: \", selectedNumber);\n  }\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Start a New Game!\"), React.createElement(Card, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Select a Number\"), React.createElement(Input, {\n    style: styles.input,\n    blurOnSubmit: true,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    keyboardType: \"numeric\",\n    maxLength: 2,\n    onChangeText: numberInputHandler,\n    value: enteredValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.button1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Reset\",\n    onPress: function onPress() {\n      resetInputHandler;\n    },\n    color: Colors.accent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.button2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    onPress: function onPress() {},\n    color: Colors.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  })))), confirmedOutput));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 10,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10\n  },\n  inputContainer: {\n    width: 300,\n    maxWidth: '80%',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    paddingHorizontal: 15\n  },\n  button1: {\n    width: '40%'\n  },\n  button2: {\n    width: '40%'\n  },\n  input: {\n    width: 50,\n    textAlign: 'center'\n  }\n});\nexport default StartGaneScreen;","map":{"version":3,"sources":["/home/asiri/Documents/Native/react/Jan/New_p/screens/StartGaneScreen.js"],"names":["React","useState","Card","Input","Colors","StartGaneScreen","enteredValue","setEnteredValue","confirmed","setConfirmed","selectedNumber","setSelectedNumber","numberInputHandler","inputText","replace","resetInputHandler","fasle","confirmInputHandler","chosenNumber","parseInt","NaN","confirmedOutput","Keyboard","dismiss","styles","screen","title","inputContainer","input","buttonContainer","button1","accent","button2","primary","StyleSheet","create","padding","alignItems","fontSize","marginVertical","width","maxWidth","flexDirection","justifyContent","paddingHorizontal","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  Button,\n  TouchableWithoutFeedback,\n  Keyboard,\n} from 'react-native';\nimport Card from '../components/Card';\nimport Input from '../components/Input';\nimport Colors from '../constants/colors';\n\nconst StartGaneScreen = () => {\n  const [enteredValue, setEnteredValue] = useState('');\n  const [confirmed, setConfirmed] = useState('false');\n  const [selectedNumber, setSelectedNumber] = useState();\n\n  const numberInputHandler = (inputText) => {\n    setEnteredValue(inputText.replace(/[^0-9]/g, ''));\n  };\n\n  const resetInputHandler = () => {\n    setEnteredValue('');\n    setConfirmed(fasle);\n  };\n  const confirmInputHandler = () => {\n    const chosenNumber = parseInt(enteredValue);\n    if (chosenNumber === NaN || chosenNumber <= 0 || chosenNumber > 99) {\n      return;\n    }\n    setConfirmed(true);\n    setSelectedNumber(parseInt(chosenNumber));\n    setEnteredValue('');\n  };\n\n  let confirmedOutput;\n\n  if (confirmed) {\n    confirmedOutput = <Text> Chosen Number: {selectedNumber}</Text>;\n  }\n\n  return (\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n      <View style={styles.screen}>\n        <Text style={styles.title}>Start a New Game!</Text>\n        <Card style={styles.inputContainer}>\n          <Text>Select a Number</Text>\n          <Input\n            style={styles.input}\n            blurOnSubmit\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            keyboardType=\"numeric\"\n            maxLength={2}\n            onChangeText={numberInputHandler}\n            value={enteredValue}\n          />\n          <View style={styles.buttonContainer}>\n            <View style={styles.button1}>\n              <Button\n                title=\"Reset\"\n                onPress={() => {\n                  resetInputHandler;\n                }}\n                color={Colors.accent}\n              />\n            </View>\n            <View style={styles.button2}>\n              <Button\n                title=\"Confirm\"\n                onPress={() => {}}\n                color={Colors.primary}\n              />\n            </View>\n          </View>\n        </Card>\n        {confirmedOutput}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\nconst styles = StyleSheet.create({\n  screen: {\n    padding: 10,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10,\n  },\n  inputContainer: {\n    width: 300,\n    maxWidth: '80%',\n    alignItems: 'center',\n  },\n\n  buttonContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    paddingHorizontal: 15,\n  },\n  button1: {\n    width: '40%',\n  },\n  button2: {\n    width: '40%',\n  },\n  input: {\n    width: 50,\n    textAlign: 'center',\n  },\n});\n\nexport default StartGaneScreen;\n"]},"metadata":{},"sourceType":"module"}